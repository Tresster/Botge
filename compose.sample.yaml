services:
  meilisearch:
    image: getmeili/meilisearch:1.14.0
    ports:
      - 7700:7700
    environment:
      - MEILI_MASTER_KEY=SAMPLEMASTERKEY
      - MEILI_NO_ANALYTICS=true
      - MEILI_EXPERIMENTAL_REDUCE_INDEXING_MEMORY_USAGE
    volumes:
      - ./meili_data:/meili_data
    healthcheck:
      test: set -o pipefail;curl -fsS http://localhost:7700/health | grep -q '{"status":"available"}'
      retries: 3
      timeout: 5s

  nginx:
    restart: always
    image: nginx:1.27.5-alpine
    volumes:
      - ./nginx/cache:/var/www/cache:rw
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro

  server:
    image: ghcr.io/tresster/botge:main
    # use this and delete the image field above to build and run image locally
    # `docker compose up --build`
    # build:
    # context: .
    environment:
      - NODE_ENV=production
      # discord
      - APP_ID=
      - DISCORD_TOKEN=

      # open ai
      #- OPENAI_API_KEY=

      # google
      #- CREDENTIALS=

      # twitch
      #- TWITCH_CLIENT_ID=
      #- TWITCH_SECRET=

      # MeiliSearch
      - MEILISEARCH_HOST=http://meilisearch:7700
      - MEILISEARCH_API_KEY=SAMPLEMASTERKEY

      # nginx
      - LOCAL_CACHE_BASE=http://nginx:80

      # clips, comment out if not needed
      - UPDATE_CLIPS_ON_STARTUP=true
    volumes:
      - ./tmp:/app/tmp
      - ./data:/app/data
    restart: always
    depends_on:
      - meilisearch
      - nginx
